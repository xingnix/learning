{"version": 2, "width": 236, "height": 59, "timestamp": 1695115444, "env": {"SHELL": "/bin/zsh", "TERM": "xterm-256color"}}
[0.08468, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                                                                           \r \r"]
[0.085261, "o", "\u001b]2;xing@x-desktop:/run/media/xing/8b421de9-f896-4331-bc6e-f66d512fa937/xing/github/learning/machinelearning/python/concept\u0007\u001b]1;..ython/concept\u0007"]
[0.088046, "o", "\u001b]7;file://x-desktop/run/media/xing/8b421de9-f896-4331-bc6e-f66d512fa937/xing/github/learning/machinelearning/python/concept\u0007"]
[0.135811, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[0m\u001b[49m\u001b[39m\u001b[0m\u001b[47m\u001b[38;5;30m \u001b[0m\u001b[38;5;30m\u001b[47m\u001b[47m\u001b[38;5;30m \u001b[0m\u001b[38;5;30m\u001b[47m\u001b[48;5;30m\u001b[37m\u001b[0m\u001b[37m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m  /\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mrun\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250mme\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250mx\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250m8\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/xing/github/\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mlearning\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/machinelearning/python/\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mconcept\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m\u001b[0m\u001b[38;5;254m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m \u001b[0m\u001b[38;5;254m\u001b[48;5;30m\u001b[43m\u001b[38;5;30m\u001b[0m\u001b[38;5;30m\u001b[43m\u001b[43m\u001b[30m  \u001b[30m master \u001b[30m!8 \u001b[30m?3\u001b[0m\u001b[30m\u001b[43m\u001b[43m\u001b[30m \u001b[0m\u001b[30m\u001b[43m\u001b[49m\u001b[33m\u001b[0m\u001b[33m\u001b[49m\u001b[39m \u001b[0m\u001b[49m\u001b[39m\u001b[K\u001b[139C\u001b[0m\u001b[49m\u001b[30m\u001b[0m\u001b[30m\u001b[40m\u001b[32m \u001b[0m\u001b[32m\u001b[40m\u001b[40m\u001b[32m✔\u001b[0m\u001b[32m\u001b[40m\u001b[40m\u001b[32m \u001b[0m\u001b[32m\u001b[40m\u001b[49m\u001b[39m\u001b[143D"]
[0.136211, "o", "\u001b[?2004h"]
[1.72856, "o", "\u001b[1m\u001b[31mc\u001b[0m\u001b[39m"]
[1.730193, "o", "\b\u001b[1m\u001b[31mc\u001b[0m\u001b[39m\u001b[38;5;244mat listeliminate.py\u001b[39m\u001b[19D"]
[1.808285, "o", "\b\u001b[1m\u001b[31mc\u001b[1m\u001b[31ma\u001b[0m\u001b[39m"]
[2.046736, "o", "\b\b\u001b[0m\u001b[32mc\u001b[0m\u001b[32ma\u001b[32mt\u001b[39m"]
[2.174535, "o", "\u001b[39m "]
[2.951816, "o", "\u001b[39m\u001b[4ml\u001b[24m"]
[3.039881, "o", "\b\u001b[4ml\u001b[39m\u001b[4mi\u001b[24m"]
[3.151665, "o", "\b\u001b[4mi\u001b[39m\u001b[4ms\u001b[24m"]
[3.500735, "o", "\b\u001b[4ms\u001b[39m\u001b[4mt\u001b[39m\u001b[4me\u001b[39m\u001b[4ml\u001b[39m\u001b[4mi\u001b[39m\u001b[4mm\u001b[39m\u001b[4mi\u001b[39m\u001b[4mn\u001b[39m\u001b[4ma\u001b[39m\u001b[4mt\u001b[39m\u001b[4me\u001b[39m\u001b[4m.\u001b[24m"]
[4.064623, "o", "\b\u001b[4m.\u001b[39m\u001b[4mp\u001b[39m\u001b[4my\u001b[24m"]
[5.07491, "o", "\u001b[?2004l\r\r\n"]
[5.075365, "o", "\u001b]2;cat listeliminate.py\u0007\u001b]1;\u0007"]
[5.077133, "o", "import re\r\nfrom functools import reduce\r\n\r\ninput_string = \"\"\"\r\nExample Sky AirTemp Humidity Wind Water Forecast  EnjoySport\r\n1       Sunny  Warm  Normal  Strong  Warm  Same   Yes\r\n2       Sunny  Warm  High    Strong  Warm  Same   Yes\r\n3       Rainy  Cold  High    Strong  Warm  Change No\r\n4       Sunny  Warm  High    Strong  Cool  Change Yes\"\"\"\r\nlines = list(map(lambda x: list(filter(lambda y: y != '',\r\n                             re.split(' +', x)))[1:],  # drop first item \"Example\"\r\n            filter(lambda x: x != '', re.split('\\n', input_string))))\r\nnames, data = lines[0], lines[1:]\r\ndata_lines = list(map(lambda x: dict(zip(names, x)), data))\r\nvalues = dict(zip(names,\r\n                  reduce(lambda x, y:\r\n                         map(lambda z:\r\n                             z[0] | set([z[1]]) if type(z[0]) is set else set(z),\r\n                             zip(x, y)),\r\n                         lines[1:])))\r\nnames, target = names[:-1], names[-1]  # the last item is target\r\np = 'Yes'\r\nn = 'No'\r\n\r\n\r\ndef listconcept(names, values):\r\n    # rules=dict.fromkeys(names,'?')\r\n    rules = [{}]\r\n    newrules = []\r\n    for name in names:\r\n        for rule in rules:\r\n            for value in values[name]:\r\n                r = rule.copy()\r\n                r[name] = value\r\n                newrules.append(r)\r\n            rule[name] = '?'\r\n            newrules.append(rule)\r\n        rules = newrules\r\n        newrules = []\r\n    return rules\r\n\r\n\r\ndef listconcept(names, values):\r\n    # rules=dict.fromkeys(names,'?')\r\n    rules = [{}]\r\n    newrules = []\r\n    for name in names:\r\n        for rule in rules:\r\n            for value in values[name] | set(['?']):\r\n                r = rule.copy()\r\n                r[name] = value\r\n                newrules.append(r)\r\n        rules = newrules\r\n        newrules = []\r\n    return rules\r\n\r\n\r\ndef eliminate(rules, samples, names):\r\n    return filter(lambda rule:\r\n                  reduce(lambda s1, s2:\r\n                         s1 and\r\n                         (s2[0] if s2[1] else not s2[0]),\r\n                         map(lambda sample:\r\n                             (reduce(lambda x, y: x and y,\r\n                                     map(lambda name:\r\n                                         sample[name] == rule[name] or rule[name] == '?',\r\n                                         names)), sample[target] == p),\r\n                             samples),True),\r\n                  rules)\r\n\r\n\r\nrules=eliminate(listconcept(names, values),data_lines,names)\r\n\r\nfor r in list(rules):\r\n    print(r)\r\n"]
[5.077674, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                                                                           \r \r"]
[5.077904, "o", "\u001b]2;xing@x-desktop:/run/media/xing/8b421de9-f896-4331-bc6e-f66d512fa937/xing/github/learning/machinelearning/python/concept\u0007"]
[5.077939, "o", "\u001b]1;..ython/concept\u0007"]
[5.081947, "o", "\u001b]7;file://x-desktop/run/media/xing/8b421de9-f896-4331-bc6e-f66d512fa937/xing/github/learning/machinelearning/python/concept\u0007"]
[5.122203, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[0m\u001b[49m\u001b[39m\u001b[0m\u001b[47m\u001b[38;5;30m \u001b[0m\u001b[38;5;30m\u001b[47m\u001b[47m\u001b[38;5;30m \u001b[0m\u001b[38;5;30m\u001b[47m\u001b[48;5;30m\u001b[37m\u001b[0m\u001b[37m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m  /\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mrun\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250mme\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250mx\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250m8\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/xing/github/\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mlearning\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/machinelearning/python/\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mconcept\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m\u001b[0m\u001b[38;5;254m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m \u001b[0m\u001b[38;5;254m\u001b[48;5;30m\u001b[43m\u001b[38;5;30m\u001b[0m\u001b[38;5;30m\u001b[43m\u001b[43m\u001b[30m  \u001b[30m master \u001b[30m!8 \u001b[30m?3\u001b[0m\u001b[30m\u001b[43m\u001b[43m\u001b[30m \u001b[0m\u001b[30m\u001b[43m\u001b[49m\u001b[33m\u001b[0m\u001b[33m\u001b[49m\u001b[39m \u001b[0m\u001b[49m\u001b[39m\u001b[K\u001b[139C\u001b[0m\u001b[49m\u001b[30m\u001b[0m\u001b[30m\u001b[40m\u001b[32m \u001b[0m\u001b[32m\u001b[40m\u001b[40m\u001b[32m✔\u001b[0m\u001b[32m\u001b[40m\u001b[40m\u001b[32m \u001b[0m\u001b[32m\u001b[40m\u001b[49m\u001b[39m\u001b[143D"]
[5.123081, "o", "\u001b[?2004h"]
[6.586325, "o", "\u001b[1m\u001b[31mp\u001b[0m\u001b[39m"]
[6.5879, "o", "\b\u001b[1m\u001b[31mp\u001b[0m\u001b[39m\u001b[38;5;244mython listeliminate.py\u001b[39m\u001b[22D"]
[6.849147, "o", "\b\u001b[1m\u001b[31mp\u001b[1m\u001b[31my\u001b[0m\u001b[39m"]
[7.025166, "o", "\b\b\u001b[1m\u001b[31mp\u001b[1m\u001b[31my\u001b[1m\u001b[31mt\u001b[0m\u001b[39m"]
[7.089105, "o", "\b\u001b[1m\u001b[31mt\u001b[1m\u001b[31mh\u001b[0m\u001b[39m"]
[7.169152, "o", "\b\u001b[1m\u001b[31mh\u001b[1m\u001b[31mo\u001b[0m\u001b[39m"]
[7.99316, "o", "\b\b\b\b\b\u001b[0m\u001b[32mp\u001b[0m\u001b[32my\u001b[0m\u001b[32mt\u001b[0m\u001b[32mh\u001b[0m\u001b[32mo\u001b[32mn\u001b[39m\u001b[39m \u001b[39m\u001b[4ml\u001b[39m\u001b[4mi\u001b[39m\u001b[4ms\u001b[39m\u001b[4mt\u001b[39m\u001b[4me\u001b[39m\u001b[4ml\u001b[39m\u001b[4mi\u001b[39m\u001b[4mm\u001b[39m\u001b[4mi\u001b[39m\u001b[4mn\u001b[39m\u001b[4ma\u001b[39m\u001b[4mt\u001b[39m\u001b[4me\u001b[39m\u001b[4m.\u001b[39m\u001b[4mp\u001b[39m\u001b[4my\u001b[24m"]
[8.595348, "o", "\u001b[?2004l\r\r\n"]
[8.595752, "o", "\u001b]2;python listeliminate.py\u0007\u001b]1;\u0007"]
[8.63552, "o", "{'Sky': '?', 'AirTemp': 'Warm', 'Humidity': '?', 'Wind': '?', 'Water': '?', 'Forecast': '?'}\r\n{'Sky': '?', 'AirTemp': 'Warm', 'Humidity': '?', 'Wind': 'Strong', 'Water': '?', 'Forecast': '?'}\r\n{'Sky': 'Sunny', 'AirTemp': '?', 'Humidity': '?', 'Wind': '?', 'Water': '?', 'Forecast': '?'}\r\n{'Sky': 'Sunny', 'AirTemp': '?', 'Humidity': '?', 'Wind': 'Strong', 'Water': '?', 'Forecast': '?'}\r\n{'Sky': 'Sunny', 'AirTemp': 'Warm', 'Humidity': '?', 'Wind': '?', 'Water': '?', 'Forecast': '?'}\r\n{'Sky': 'Sunny', 'AirTemp': 'Warm', 'Humidity': '?', 'Wind': 'Strong', 'Water': '?', 'Forecast': '?'}\r\n"]
[8.640265, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                                                                           \r \r"]
[8.640468, "o", "\u001b]2;xing@x-desktop:/run/media/xing/8b421de9-f896-4331-bc6e-f66d512fa937/xing/github/learning/machinelearning/python/concept\u0007"]
[8.640507, "o", "\u001b]1;..ython/concept\u0007"]
[8.644409, "o", "\u001b]7;file://x-desktop/run/media/xing/8b421de9-f896-4331-bc6e-f66d512fa937/xing/github/learning/machinelearning/python/concept\u0007"]
[8.681421, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[0m\u001b[49m\u001b[39m\u001b[0m\u001b[47m\u001b[38;5;30m \u001b[0m\u001b[38;5;30m\u001b[47m\u001b[47m\u001b[38;5;30m \u001b[0m\u001b[38;5;30m\u001b[47m\u001b[48;5;30m\u001b[37m\u001b[0m\u001b[37m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m  /\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mrun\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250mme\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250mx\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/\u001b[38;5;250m8\u001b[0m\u001b[38;5;250m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/xing/github/\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mlearning\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m/machinelearning/python/\u001b[1m\u001b[38;5;254m\u001b[48;5;30m\u001b[38;5;255mconcept\u001b[0m\u001b[38;5;255m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m\u001b[0m\u001b[38;5;254m\u001b[48;5;30m\u001b[48;5;30m\u001b[38;5;254m \u001b[0m\u001b[38;5;254m\u001b[48;5;30m\u001b[43m\u001b[38;5;30m\u001b[0m\u001b[38;5;30m\u001b[43m\u001b[43m\u001b[30m  \u001b[30m master \u001b[30m!8 \u001b[30m?3\u001b[0m\u001b[30m\u001b[43m\u001b[43m\u001b[30m \u001b[0m\u001b[30m\u001b[43m\u001b[49m\u001b[33m\u001b[0m\u001b[33m\u001b[49m\u001b[39m \u001b[0m\u001b[49m\u001b[39m\u001b[K\u001b[139C\u001b[0m\u001b[49m\u001b[30m\u001b[0m\u001b[30m\u001b[40m\u001b[32m \u001b[0m\u001b[32m\u001b[40m\u001b[40m\u001b[32m✔\u001b[0m\u001b[32m\u001b[40m\u001b[40m\u001b[32m \u001b[0m\u001b[32m\u001b[40m\u001b[49m\u001b[39m\u001b[143D"]
[8.682328, "o", "\u001b[?2004h"]
[10.701535, "o", "\u001b[?2004l\r\r\n"]
