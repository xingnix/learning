 # +LaTeX_CLASS: article
#+LATEX_HEADER: \usepackage{etex}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \DeclareMathOperator*{\median}{median}
#+LATEX_HEADER: \usepackage{clrscode}
 # +LATEX_HEADER: \usepackage[usenames]{color}
#+LATEX_HEADER: \usepackage{pstricks}
#+LATEX_HEADER: \usepackage{pgfplots}
#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usepackage[europeanresistors,americaninductors]{circuitikz}
#+LATEX_HEADER: \usepackage{colortbl}
#+LATEX_HEADER: \usepackage{yfonts}
#+LATEX_HEADER: \usetikzlibrary{shapes,arrows}
#+LATEX_HEADER: \usetikzlibrary{positioning}
#+LATEX_HEADER: \usetikzlibrary{arrows,shapes}
#+LATEX_HEADER: \usetikzlibrary{intersections}
#+LATEX_HEADER: \usetikzlibrary{calc,patterns,decorations.pathmorphing,decorations.markings}
#+LATEX_HEADER: \usepackage[BoldFont,SlantFont,CJKchecksingle]{xeCJK}
#+LATEX_HEADER: \setCJKmainfont[BoldFont=Evermore Hei]{Evermore Kai}
#+LATEX_HEADER: \setCJKmonofont{Evermore Kai}
 # +LATEX_HEADER: \xeCJKsetup{CJKglue=\hspace{0pt plus .08 \baselineskip }}
#+LATEX_HEADER: \usepackage{pst-node}
#+LATEX_HEADER: \usepackage{pst-plot}
#+LATEX_HEADER: \psset{unit=5mm}

#+startup: beamer
#+LaTeX_CLASS: beamer
# +LaTeX_CLASS_OPTIONS: [bigger]
#+latex_header: \usepackage{beamerarticle}
# +latex_header: \mode<beamer>{\usetheme{JuanLesPins}}
#+latex_header: \mode<beamer>{\usetheme{Frankfurt}}
#+latex_header: \mode<beamer>{\usecolortheme{dove}}
#+latex_header: \mode<article>{\hypersetup{colorlinks=true,pdfborder={0 0 0}}}

#+TITLE:  图像恢复
#+AUTHOR:    
#+EMAIL:
#+DATE:
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+latex_header: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}

#+latex_header:\setbeamercovered{transparent}
#+BEAMER_FRAME_LEVEL: 2
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)










* 概述
** 图像退化与恢复
-  图像退化

    图像在形成、记录、处理和传输过程中，由于成像系统、记录设备、传输介质和处理方法的不完善，会导致图像质量下降。这一过程称为图像的退化。

-  图像恢复
    -  图像的恢复就是要尽可能恢复退化图像的本来面目，它是沿图像退化的逆过程进行。
    -  典型的图像恢复是根据图像退化的先验知识建立一个退化模型，以此模型为基础，采用各种逆退化处理方法进行恢复，使图像质量得到改善。
** 图像退化原因与形式
- 图像退化形式
   - 模糊
   - 失真
   - 噪声
- 图像退化原因
   - 运动、对焦
   - 摄像机标定
   - 成像器件性能

* 图像退化与恢复模型
** 退化与恢复过程

- 退化过程可以被模型化为一个退化函数和一个加性噪声项，处理一幅输入图像 $f(x,y)$ 产生一幅退化图像 $g(x,y)$ 。
- 给定 $g(x,y)$ 和关于退化函数H的一些知识以及外加噪声项 $n(x,y)$ ，图像复原的目的是获得关于原始图像的近似估计 $\hat f(x,y)$ 。


** 退化模型

\[ g(x,y) = H(f,n) \]


** 线性退化模型

如果退化函数 $H$ 是一个线性、平移不变函数，那么在空间域中给出的退化图像可由下式给出：

\begin{align*}
g(x,y) &= h(x,y)\otimes f(x,y)+n(x,y)\\
G(u,v) &= H(u,v)F(u,v)+N(u,v)
\end{align*}

* 噪声模型
** 有噪声情况下的图像恢复
- 必须知道噪声的统计特性以及噪声和图像信号的相关情况，这是非常复杂的。在实际应用中，往往假设噪声是白噪声，即它的频谱密度为常数，且与图像不相关。
- 不同的恢复技术需要不同的有关噪声的先验信息，（例如：维纳滤波器需要知道噪声的谱密度，约束反卷积法需要知道噪声的协方差）。

** 噪声模型
- 数字图像的噪声主要来源于图像的获取和传输过程。图像传输器的工作情况受各种因素的影响，如图像获取中的环境条件和传感器件自身的质量
- 存在的一些重要的噪声类型：高斯噪声、瑞利噪声、伽马噪声、指数分布噪声、均匀分布噪声、脉冲噪声等

** 噪声的空间和频率特性
- 假设噪声独立于空间坐标，并且它与图像本身无关联
- 当噪声的傅里叶谱是常量时，噪声通常称为白噪声

** 高斯噪声(Gaussian noise)
- 概率密度函数（PDF)
\[p(z)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(z-\mu)^2}{2\sigma^2}}  \]

** 瑞利噪声(Rayleigh noise)
- 概率密度函数（PDF)

\[ p(z)=
\begin{cases}
\frac{2}{b}(z-a)e^{-\frac{(z-a)^2}{b}},\qquad  x\geq a \\
0 ,\qquad x<a
\end{cases} \]

- 均值与方差
   \begin{align*}
    \bar z &= a+\frac{\sqrt{\pi b}}{2} \\
    \sigma^2 &=  \frac{b(4-\pi)}{4}
   \end{align*}

** 爱尔朗（伽马）噪声(Erlang(Gamma) noise)
- 概率密度函数（PDF)
\[ p(z) = 
\begin{cases}
\frac{a^bz^{b-1}}{(b-1)!}e^{-az}, \qquad  z\geq 0 \\
0 , \qquad z<0
\end{cases}  \]

- 均值与方差
   \begin{align*}
    \bar z &= \frac{b}{a} \\
    \sigma^2 &=  \frac{b}{a^2}
   \end{align*}

** 指数噪声(Exponential noise)
- 概率密度函数
\[ p(z) = 
\begin{cases}
a e^{-az}, \qquad z\geq 0 \\
0, \qquad z<0
\end{cases}\]

- 均值与方差
\begin{align*}
    \bar z &= \frac{1}{a} \\
    \sigma^2 &=  \frac{1}{a^2}
\end{align*}

** 均匀噪声(Uniform noise)
- 概率密度函数
\[ p(z) = 
\begin{cases}
\frac{1}{b-a}, \qquad a\leq z \leq b \\
0, \qquad \text{其它}
\end{cases} \]

- 均值与方差
\begin{align*}
    \bar z &= \frac{a+b}{2} \\
    \sigma^2 &=  \frac{(b-a)^2}{12}
\end{align*}

** 脉冲(椒盐)噪声(Impulse(salt and pepper) noise)
- 概率密度函数
\[ p(z) = 
\begin{cases}
p_a, \qquad z=a \\
p_b, \qquad z=b \\
0, \qquad \text{其它}
\end{cases} \]

** 周期噪声
- 图像获取过程中的电气、机电干扰
- 可通过频域滤波减轻影响

* 噪声参数估计与滤波
** 周期噪声参数估计
- 通过检测图像的傅里叶谱进行估计。
   - 直接从图像中推断噪声分量的周期性，但这仅仅在非常简单的情况下才是可能的。
   - 周期噪声通常会产生频率尖峰，这些尖峰通过视觉分析经常可以检侧到。
- 当噪声尖峰格外显著或可以使用关于干扰的频率分量一般位置的某些知识时，自动分析是可能的。

** 噪声存在下的唯一空间滤波恢复
\begin{align*}
g(x,y)&=f(x,y)+n(x,y)\\
G(u,v)&=F(u,v)+N(u,v)
\end{align*}

- 当仅有加性噪声存在时，可以选择空间滤波方法。
- 均值滤波器
- 顺序统计滤波器
- 自适应滤波器

* 均值滤波器
** 均值滤波器
- 算术均值滤波器
- 几何均值滤波器
- 谐波均值滤波器
- 逆谐波均值滤波器   
** 算术均值滤波器
- 算术均值滤波器是最简单的均值滤波器。令 $S_{xy}$ 表示中心在 $(x,y)$ 点，尺寸为 $m\times n$ 的矩形子图像窗口的坐标组。
计算由 $S_{xy}$ 定义的区域中被干扰图像 $g(x,y)$ 的平均值。在任意点 $(x,y)$ 处复原图像就是用 $S_{xy}$ 定义区域的像素计算出来的算术均值。即：

\[ \hat f(x,y) = \frac{1}{mn}\sum_{(s,t)\in S_{xy}}g(s,t) \]

** 几何均值滤波器

\[ \hat f(x,y) = \left[\prod_{(s,t)\in S_{xy}}g(s,t)\right]^{\frac{1}{mn}} \]

- 每个被复原像素等于子图像窗口中像素点乘积的 $\frac{1}{mn}$ 次幂。
- 几何均值滤波器所达到的平滑度可以与算术均值滤波器相比，但在滤波过程中会丢失更少的图像细节。

** 谐波均值滤波器
- 使用谐波均值滤波器的操作由如下表达式给出：
   \[ \hat f(x,y) = \frac{mn}{\sum_{(s,t)\in S_{xy}}\frac{1}{g(s,t)}} \]

- 谐波均值滤波器对于“盐” 噪声效果较好，但不适于“胡椒”噪声。它善于处理高斯噪声。

** 逆谐波均值滤波器
- 逆谐波均值滤波操作对一幅图像的复原基于表达式：
     \[ \hat f(x,y) = \frac{\sum_{(s,t)\in S_{xy}}g(s,t)^{Q+1}}{\sum_{(s,t)\in S_{xy}}g(s,t)^Q} \]
- 其中Q称为滤波器的阶数。这种滤波器适合减少或是在实际中消除椒盐噪声的影响。
     - 当 $Q$ 值为正数时，滤波器用于消除“胡椒”噪声;
     - 当 $Q$ 值为负数时，滤波器用于消除“盐”噪声。
     - 当 $Q=0$ 时，逆谐波均值滤波器退变为算术均值滤波器;
     - 当 $Q=-1$ 时，逆谐波均值滤波器退变为谐波均值滤波器。

* 统计排序滤波器
** 统计排序滤波器
统计滤波器是空间域滤波器，它们的响应基于由滤波器包围的图像区域中像素点的排序。滤波器在任何点的响应由排序结果决定。

- 中值滤波器
- 最大值和最小值滤波器
- 中点滤波器
- 修正后的阿尔法均值滤波器

** 中值滤波器
# \DeclareMathOperator*{\median}{median}
\[  \hat f(x,y) = \median_{(s,t)\in S_{xy}} g(s,t) \]
# \[  \hat f(x,y) = median\{g(s,t)\mid(s,t)\in S_{xy} \} \]
- 中值滤波器的应用非常普遍，对于很多种随机噪声，它都有良好的去噪能力，
- 在相同尺寸下比起线性平滑滤波器引起的模糊较少。
- 中值滤波器尤其对单极或双极脉冲噪声非常有效。


** 最大值滤波器
# \[  \hat f(x,y) = \max\{g(s,t)\mid(s,t)\in S_{xy} \} \]
\[  \hat f(x,y) = \max_{(s,t)\in S_{xy}}g(s,t) \]
- 最大值滤波器在发现图像中的最亮点时非常有用。
- 同样，因为“胡椒”噪声是非常低的值，作为子图像区域Sxy的最大值选择结果，它可以通过这种滤波器消除。

** 最小值滤波器
\[  \hat f(x,y) = \min_{(s,t)\in S_{xy}}g(s,t) \]
- 对发现图像中的最暗点非常有用。
- 作为最小值操作的结果，它可以用来消除“盐”噪声。

** 中点滤波器
\[  \hat f(x,y) = \frac{1}{2}\left[\max_{(s,t)\in S_{xy}}g(s,t)+\frac{1}{2}\min_{(s,t)\in S_{xy}}g(s,t)\right] \]
- 结合了顺序统计和求平均，对于高斯和均匀随机分布这类噪声有最好的效果。

** 修正后的阿尔法均值滤波器
在 $S_{xy}$ 邻域内去掉 $g(s,t)$ 最高灰度值的 $\frac{d}{2}$ 和最低灰度值的 $\frac{d}{2}$ 。用 $g_r(s,t)$ 来代表剩余的 $mn-d$ 个像素。
由这些剩余像素点的平均值形成的滤波器称为修正后的阿尔法均值滤波器。
\[ \hat f(x,y) = \frac{1}{mn-d}\sum_{(s,t)\in S_{xy}}g_r(s,t) \]
- 其中，$d$ 值可以取 $0$ 到 $mn-1$ 之间的任意数。
- 修正后的阿尔法均值滤波器在包括多种噪声的情况下非常适用，例如高斯噪声和椒盐噪声混合的情况下。

* 自适应滤波器
** 自适应、局部噪声消除滤波器
- 随机变量最简单的统计度量是均值和方差。这些适当的参数是自适应滤波器的基础，因为它们是与图像状态紧密相关的数据。
- 均值给出了计算均值的区域中灰度平均值的度量，
- 方差给出了这个区域的平均对比度的度量。

** 自适应、局部噪声消除滤波器
\[ \hat f(x,y)=g(x,y)-\frac{\sigma_n^2}{\sigma_L^2}(g(x,y)-m_L) \]

- $g(x,y)$ 表示图像在点 $(x,y)$ 上的值
- $\sigma^2_n$ 表示干扰的方差
- $m_L$ 表示 $S_{xy}$ 上像素点的局部均值
- $\sigma_L^2$ 表示 $S_{xy}$ 上像素点的局部方差

** 自适应中值滤波器

- 自适应中值滤波器可以处理具有更大概率的冲激噪声。
- 平滑非冲激噪声时可以更好地保存细节。

** 自适应中值滤波器
如下标记符号：
- $z_{min}$ 表示 $S_{xy}$ 中灰度级的最小值
- $z_{max}$ 表示 $S_{xy}$ 中灰度级的最大值
- $z_{med}$ 表示 $S_{xy}$ 中灰度级的中值
- $z_{xy}$ 表示坐标 $(x,y)$ 上的灰度级
- $S_{max}$ 表示 $S_{xy}$ 允许的最大尺寸

** 自适应中值滤波器
 \begin{codebox}
\Procname{自适应中值滤波器}
 \zi      \Repeat
 \zi    $ A_1 \gets z_{med}-z_{min}$ 
 \zi    $ A_2 \gets z_{med}-z_{max}$ 
 \zi    \If  $A_1>0$ and  $A_2<0$ 
 \zi        \Then 
 \zi             $ B_1 \gets z_{xy}-z_{min}$ 
 \zi             $ B_2 \gets z_{xy}-z_{max}$ 
 \zi             \If  $B_1>0$ and  $ B_2<0$ 
 \zi               \Then \Return $z_{xy}$
 \zi               \Else \Return $z_{med}$
                 \End
 \zi        \Else increase the window-size
        \End  
 \zi \Until $window-size > S_{max}$ 
 \zi \Return $z_{med}$
 \end{codebox}

* 周期噪声滤波
** 周期噪声滤波
- 带阻滤波器
- 带通滤波器
- 陷波滤波器
- 最佳陷波滤波器

** 带阻滤波器
- 带阻滤波器消除或衰减了傅里叶变换原点处的频段。
- 带阻滤波器的主要应用之一是在频域噪声分量位置近似已知的应用中消除噪声。
** 理想带阻滤波器
\[ H(u,v)=
\begin{cases}
1, \qquad D(u,v)<D_0-\frac{W}{2} \\
0, \qquad D_0-\frac{W}{2} \leq D(u,v) \leq D_0+\frac{W}{2}\\
1, \qquad D(u,v)>D_0+\frac{W}{2}
\end{cases} \]

其中， $D(u,v)$ 是到中心化频率矩形原点的距离，$W$ 是频带的宽度， $D_0$ 是频带的中心半径。

** n阶巴特沃思(Butterworth)带阻滤波器
\[ H(u,v) = \frac{1}{1+\left(\frac{D(u,v)W}{D^2(u,v)-D_0^2}\right)^{2n}} \]

** 高斯带阻滤波器
\[ H(u,v)=1-e^{-\frac{1}{2}\left(\frac{D^2(u,v)-D_0^2}{D(u,v)W}\right)^{2n}} \]

** 带通滤波器
带通滤波器执行与带阻滤波器相反的操作。
带通滤波器的传递函数 $H_{bp}(u,v)$ 可由相应的带阻滤波器的传递函数 $H_{br}(u,v)$ 得到：
\[ H_{bp}(u,v)=1-H_{br}(u,v) \]

** 理想带通滤波器
\[ H(u,v)=
\begin{cases}
0, \qquad D(u,v)<D_0-\frac{W}{2} \\
1, \qquad D_0-\frac{W}{2} \leq D(u,v) \leq D_0+\frac{W}{2}\\
0, \qquad D(u,v)>D_0+\frac{W}{2}
\end{cases} \]

** 理想Butterworth带通滤波器
\begin{align*}
H_{Bbp}(u,v) &=1- \frac{1}{1+\left(\frac{D(u,v)W}{D^2(u,v)-D_0^2}\right)^{2n}}\\
&= \frac{\left(\frac{D(u,v)W}{D^2(u,v)-D_0^2}\right)^{2n}}{1+\left(\frac{D(u,v)W}{D^2(u,v)-D_0^2}\right)^{2n}}
\end{align*}

** 理想Gaussian带通滤波器
\begin{align*}
H(u,v)&=1-\left(1-e^{-\frac{1}{2}\left(\frac{D^2(u,v)-D_0^2}{D(u,v)W}\right)^{2n}}\right)\\
&=e^{-\frac{1}{2}\left(\frac{D^2(u,v)-D_0^2}{D(u,v)W}\right)^{2n}}
\end{align*}

** 陷波滤波器
- 陷波滤波器阻止(或通过)事先定义的中心频率邻域内的频率。
- 由于傅里叶变换是对称的，要获得有效结果，陷波滤波器必须以关于原点对称的形式出现。
- 可实现的陷波滤波器的对数是任意的。陷波区域的形状也是任意的(例如，矩形)。

** 理想陷波滤波器

\begin{align*}
H(u,v) &= \begin{cases}
0,\qquad D_1(u,v)\leq D_0  \\
0, \qquad D_2(u,v)\leq D_0 \\
1, \qquad \text{其它}
\end{cases}\\
D_1(u,v) &=\left((u-u_0)^2+(v-v_0)^2\right)^{\frac{1}{2}}\\
D_2(u,v) &=\left((u+u_0)^2+(v+v_0)^2\right)^{\frac{1}{2}}
\end{align*}

半径为 $D_0$ ，中心在 $(u_0,v_0)$ 且在 $(-u_0,-v_0)$ 对称

** 阶数为n的巴特沃思陷波带阻滤波器
\[ H(u,v)=\frac{1}{1+\left(\frac{D_0^2}{D_1(u,v)D_2(u,v)}\right)^n} \]

** 高斯陷波带阻滤波器
\[ H(u,v)=1-e^{-\frac{1}{2}\frac{D_1(u,v)D_2(u,v)}{D_0^2}} \]

** 陷波带通滤波器的传递函数：
\[  H_{np}(u,v)=1-H_{nr}(u,v) \]


当 $u_0=v_0$ 时， 陷波带通滤波器变为低通滤波器。

* 线性位置不变退化
** 线性位置不变退化模型
\begin{align*}
 H[af_1(x,y)+bf_2(x,y)] &= aH[f_1(x,y)]+bH[f_2(x,y)] \\
  H[f(x,y)] &= g(x,y) \\
 H[f(x-\alpha,y-\beta)] &= g(x-\alpha,y-\beta)
\end{align*}

** 脉冲响应
\begin{align*}
H[\delta(x,y)] &= h(x,y) \\
H[\delta(x-\alpha,y-\beta)] &= h(x-\alpha,y-\beta) \\
H[f(\alpha,\beta)\delta(x-\alpha,y-\beta)] &=f(\alpha,\beta)h(x-\alpha,y-\beta) \\
\end{align*}

** 卷积
\begin{align*}
g(x,y) &=H[f(x,y)] \\
&= H[f(x,y)*\delta(x,y)] \\
&= H\left[\int_{-\infty}^{\infty}\int_{-\infty}^{\infty} f(\alpha,\beta)\delta(x-\alpha,y-\beta) d\alpha d\beta\right] \\
&= \int_{-\infty}^{\infty}\int_{-\infty}^{\infty} H[f(\alpha,\beta)\delta(x-\alpha,y-\beta)] d\alpha d\beta \\
&= \int_{-\infty}^{\infty}\int_{-\infty}^{\infty} f(\alpha,\beta)H[\delta(x-\alpha,y-\beta)] d\alpha d\beta \\
&= \int_{-\infty}^{\infty}\int_{-\infty}^{\infty} f(\alpha,\beta)h(x-\alpha,y-\beta)d\alpha d\beta \\
&= f(x,y)*h(x,y)
\end{align*}

** 有噪声退化模型
\begin{align*}
g(x,y) &=\int_{-\infty}^{\infty}\int_{-\infty}^{\infty} f(\alpha,\beta)h(x-\alpha,y-\beta) d\alpha d\beta +n(x,y)\\
G(u,v) &= H(u,v)F(u,v)+N(u,v)
\end{align*}

** 估计退化函数
- 图像观察估计法
- 试验估计法
- 模型估计法

** 图像观测估计法

\[ H_s(u,v) = \frac{G_s(u,v)}{\hat F_s(u,v)} \]

其中：
- $G_s(u,v)$ 为特征明显的部分图像
- $\hat F_s(u,v)$ 是对原始图像的估计

** 试验估计法

\[ H(u,v)=\frac{G(u,v)}{A} \]

- 如果使用与获取退化图像的设备相似的装置，理论上可以得到准确的退化估计。
- 利用相同的系统设置， 通过对一个脉冲(小亮点)成像可得到退化的脉冲响应。

** 模型估计法

- 根据导致模糊的物理过程（先验知识）来确定 $h(x,y)$ 或 $H(u,v)$ 。
- 长时间曝光下大气湍流造成的转移函数
   \[ H(u,v) = e^{-k(u^2+v^2)^{\frac{5}{6}}} \]
- $k$ 是常数，它与湍流的性质有关。

** 运动模糊
- 假设 $T$ 为曝光时间（快门时间）， $x_0(t),y_0(t)$ 是位移的 $x$ 分量和 $y$ 分量。
\begin{align*}
g(x,y) &= \int_0^T f(x-x_0(t),y-y_0(t)) dt \\
g(x,y) &= \int_0^T f(x,y)*\delta(x-x_0(t),y-y_0(t)) dt \\
g(x,y) &= f(x,y)* \int_0^T \delta(x-x_0(t),y-y_0(t)) dt \\
G(u,v) &= F(u,v) \int_0^T \mathcal{F}[\delta(x-x_0(t),y-y_0(t))] dt \\
G(u,v) &= F(u,v) \int_0^T e^{-j2\pi(ux_0(t)+vy_0(t))} dt 
\end{align*}

** 直线运动模糊
当
\begin{align*}
x_0(t) &=\frac{at}{T} \\
y_0(t) &=0
\end{align*}
时
\begin{align*}
H(u,v) &=\int_0^T e^{-j2\pi u \frac{at}{T}} dt \\
&=\frac{T}{\pi u a} \sin(\pi u a) e^{-j\pi u a}
\end{align*}

** 逆滤波

\begin{align*}
 \hat F(u,v) &= \frac{G(u,v)}{H(u,v)} \\
 \hat F(u,v) &= F(u,v)+\frac{N(u,v)}{H(u,v)} \\
\end{align*}

- 即使知道退化函数，也不能准确地复原未退化的图像。因为噪声是一个随机函数，其傅氏变换未知。
- 实际应用逆滤波复原方法时存在病态的问题，即如果退化为零或非常小的值，则 $\frac{N(u,v)}{H(u,v)}$ 很容易决定复原函数的值。

** 最小均方误差滤波(维纳滤波) 
- 最小均方误差滤波是综合退化函数和噪声统计特征两方面进行复原处理的方法。
- 目标是找一个未污染图像f的估计值，使它们之间的均方误差最小。误差度量由下式给出：
  \[ e^2 = E((f-\hat f)^2) \]
-  假定：噪声和图像不相关；其中一个有零均值；估计的灰度级是退化图像灰度级的线性函数。

** 最小均方误差滤波(维纳滤波) 

\begin{align*}
\hat F(u,v) &= \frac{H^{* } S_f(u,v)}{S_f(u,v)|H(u,v)|^2+S_n(u,v)}G(u,v) \\
&= \frac{H^{* } }{|H(u,v)|^2+\frac{S_n(u,v)}{S_f(u,v)}}G(u,v) \\
&= \frac{1}{H(u,v)}\frac{|H(u,v)|^2 }{|H(u,v)|^2+\frac{S_n(u,v)}{S_f(u,v)}}G(u,v)
\end{align*}

其中：
- $H(u,v),H^{*}(u,v)$ 退化函数及其共轭复数
- $S_n(u,v)=|N(u,v)|^2$ 噪声功率谱
- $S_f(u,v)=|F(u,v)|^2$ 未退化图像的功率谱

** 最小均方误差滤波(维纳滤波) 

- 当处理白噪声时，谱 $|N(u,v)|^2$ 是一个常数，大大简化了处理过程。
- 未退化图像的功率谱很少是已知。当这些值未知或不能估计时，经常使用的方法是用下面的表达式近似：
   \[ \hat F(u,v) = \frac{1}{H(u,v)}\frac{|H(u,v)|^2 }{|H(u,v)|^2+K}G(u,v) \]

** 约束最小二乘方滤波器

\begin{align*}
\hat F(u,v) &= \frac{H^{* }(u,v) }{|H(u,v)|^2+\gamma|P(u,v)|^2}G(u,v)\\
P(u,v)&=\mathcal{F}[p(x,y)]\\
p(x,y)&=
\begin{bmatrix}
0 & -1 & 0 \\
-1 & 4 & -1 \\
0 & -1 & 0 
\end{bmatrix}
\end{align*}
- 噪声方差和均值经常能从一个给定的退化图像计算出来，这是一个很重要的优点。
- 维纳滤波建立在最小化统计准则的基础上，在平均意义上它是最优的。
- 约束最小二乘方滤波器对于处理的每一幅图像它都能产生最优结果。因此，算法的选择往往由结果图像的感知视觉质量决定(至少部分是这样)。

** 几何均值滤波
\[ \hat F(u,v) =\left(\frac{H^{*}(u,v)}{|H(u,v)|^2}\right)^{\alpha}\left(\frac{H^{ *}(u,v)}{|H(u,v)|^2+\beta \frac{S_n(u,v)}{S_f(u,v)}}\right)^{1-\alpha}G(u,v) \]

* 几何变换
** 几何变换
- 几何变换可在一幅图像中的像素间修改空间关系。
- 几何变换通常又叫做橡皮片变换，因为它们可以被看做在一片橡皮片上打印图像，然后根据预先确定的规则拉伸这个橡皮片的过程。
- 在数字图像处理中，几何变换由两个基本操作组成：
     -  空间变换，它定义了图像平面上像素的重新安排；
     -  灰度级插补，处理空间变换后图像中像素灰度级的赋值。

** 空间变换
- 空间变换中对应的连接点可用多种不同技术建立。例如，一些图像生成系统有物理的人为缺陷(如金属点)，镶嵌在图像传感器上。这产生了一个已知点集(叫做网状标记)，在图像被获取时直接镶在图像上。
- 如果图像由于一些其它处理(如图像显示或图像重建处理)失真了，图像可以用这项技术校正。

** 灰度级插补
- 空间变换方法遍历坐标 $(x,y)$ 的整数值得到复原图像 。然而，根据系数 $c_i$ 的值，根据前边两个式子能产生非整数的 $x',y'$ 。
- 因为失真图像 $g(x,y)$ 是数字的，它的像素值只定义在整数坐标。因此，对 $x',y'$ 用非整数值会导致一个到 $g$ 位置的映射，在这些位置没有灰度定义，所以有必要基于整数坐标的灰度值去推断那些位置的灰度值。

** 双线性插补
- 定义在坐标上 $(x',y')$ 的灰度级 $v(x',y')$ 用下面的关系从它的邻点值被插补。

\[ v(x',y')=a x'+by'+cx'y'+d \]
